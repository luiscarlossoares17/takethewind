{"version":3,"sources":["webpack:///./resources/js/app.js","webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/plugins/jquery.js","webpack:///./resources/sass/app.scss?4910","webpack:///./resources/sass/loginpage.scss?55da"],"names":["require","window","_","Popper","$","jQuery","e","axios","defaults","headers","common"],"mappings":";;;;;;;;AAAAA,mBAAO,CAAC,0DAAD,CAAP;;AACAA,mBAAO,CAAC,gDAAD,CAAP,C;;;;;;;;;;ACDAC,MAAM,CAACC,CAAP,GAAWF,mBAAO,CAAC,+CAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACAC,QAAM,CAACE,MAAP,GAAgBH,2FAAhB;AACAC,QAAM,CAACG,CAAP,GAAWH,MAAM,CAACI,MAAP,GAAgBL,mBAAO,CAAC,oDAAD,CAAlC;;AAEAA,qBAAO,CAAC,gEAAD,CAAP;AACH,CALD,CAKE,OAAOM,CAAP,EAAU,CAAE;AAEd;AACA;AACA;AACA;AACA;;;AAEAL,MAAM,CAACM,KAAP,GAAeP,mBAAO,CAAC,4CAAD,CAAtB;AAEAC,MAAM,CAACM,KAAP,CAAaC,QAAb,CAAsBC,OAAtB,CAA8BC,MAA9B,CAAqC,kBAArC,IAA2D,gBAA3D;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,M;;;;;;;;;;ACxCAT,MAAM,CAACG,CAAP,GAAWH,MAAM,CAACI,MAAP,GAAgBL,mBAAO,CAAC,oDAAD,CAAlC,C;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA","file":"/js/app.js","sourcesContent":["require(\"./plugins/jquery\");\nrequire('./bootstrap');\n","window._ = require('lodash');\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\ntry {\n    window.Popper = require('popper.js').default;\n    window.$ = window.jQuery = require('jquery');\n\n    require('bootstrap');\n} catch (e) {}\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios');\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","window.$ = window.jQuery = require('jquery');","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}